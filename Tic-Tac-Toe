<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Tic-Tac-Toe</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      text-align: center;
      background-color: #f8f9fa;
      margin: 0;
      padding: 0;
    }

    .game-container {
      margin-top: 50px;
    }

    .board {
      display: grid;
      grid-template-columns: repeat(3, 100px);
      grid-gap: 5px;
      margin: 20px auto;
      width: 320px;
    }

    .cell {
      width: 100px;
      height: 100px;
      background-color: #fff;
      border: 2px solid #333;
      font-size: 48px;
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
    }

    #status {
      margin-top: 15px;
      font-size: 20px;
      font-weight: bold;
    }

    button {
      padding: 10px 20px;
      margin: 10px;
      font-size: 16px;
    }
  </style>
</head>
<body>
  <div class="game-container">
    <h1>Tic-Tac-Toe</h1>
    <div id="mode-select">
      <button onclick="startGame('human')">2 Player</button>
      <button onclick="startGame('computer')">Play vs Computer</button>
    </div>
    <div id="board" class="board"></div>
    <div id="status"></div>
    <button onclick="resetGame()" id="resetBtn">Reset</button>
  </div>

  <script>
    let board = Array(9).fill(null);
    let currentPlayer = "X";
    let isGameOver = false;
    let vsComputer = false;

    const winningCombos = [
      [0, 1, 2], [3, 4, 5], [6, 7, 8],
      [0, 3, 6], [1, 4, 7], [2, 5, 8],
      [0, 4, 8], [2, 4, 6]
    ];

    function startGame(mode) {
      vsComputer = mode === 'computer';
      resetGame();
      createBoard();
      document.getElementById("status").innerText = `Current Player: ${currentPlayer}`;
    }

    function createBoard() {
      const boardContainer = document.getElementById("board");
      boardContainer.innerHTML = "";
      board.forEach((cell, index) => {
        const cellDiv = document.createElement("div");
        cellDiv.classList.add("cell");
        cellDiv.dataset.index = index;
        cellDiv.addEventListener("click", handleCellClick);
        boardContainer.appendChild(cellDiv);
      });
    }

    function handleCellClick(e) {
      const index = e.target.dataset.index;
      if (board[index] || isGameOver) return;

      board[index] = currentPlayer;
      e.target.innerText = currentPlayer;

      if (checkWinner()) {
        document.getElementById("status").innerText = `${currentPlayer} Wins!`;
        isGameOver = true;
        return;
      }

      if (board.every(cell => cell)) {
        document.getElementById("status").innerText = "It's a Draw!";
        isGameOver = true;
        return;
      }

      currentPlayer = currentPlayer === "X" ? "O" : "X";
      document.getElementById("status").innerText = `Current Player: ${currentPlayer}`;

      if (vsComputer && currentPlayer === "O") {
        setTimeout(computerMove, 500);
      }
    }

    function computerMove() {
      if (isGameOver) return;

      let available = board.map((val, i) => val ? null : i).filter(i => i !== null);
      let move = available[Math.floor(Math.random() * available.length)];
      board[move] = "O";

      const cell = document.querySelector(`[data-index='${move}']`);
      if (cell) cell.innerText = "O";

      if (checkWinner()) {
        document.getElementById("status").innerText = "O Wins!";
        isGameOver = true;
        return;
      }

      if (board.every(cell => cell)) {
        document.getElementById("status").innerText = "It's a Draw!";
        isGameOver = true;
        return;
      }

      currentPlayer = "X";
      document.getElementById("status").innerText = `Current Player: ${currentPlayer}`;
    }

    function checkWinner() {
      return winningCombos.some(combo => {
        const [a, b, c] = combo;
        return board[a] && board[a] === board[b] && board[a] === board[c];
      });
    }

    function resetGame() {
      board = Array(9).fill(null);
      currentPlayer = "X";
      isGameOver = false;
      createBoard();
      document.getElementById("status").innerText = "";
    }
  </script>
</body>
</html>
